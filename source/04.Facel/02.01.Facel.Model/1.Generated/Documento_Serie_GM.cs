//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Collections.ObjectModel;
using Library.Common.Data;
using Library.Framework;
using Library.Framework.Layers;
using Library.Framework.Data;

using Facel.Data.Entities;
using Facel.Data.Accesses;
using Facel.Data.Logics;
using Facel.Business.Entities;
using Facel.Business.Accesses;
using Facel.Business.Logics;
using Facel.Join.Entities;
using Facel.Join.Accesses;
using Facel.Join.Logics;
using Facel.Filter.Entities;
using Facel.Filter.Accesses;
using Facel.Filter.Logics;
using Facel.Main;


//DataEntity
namespace Facel.Data.Entities
{
    [Serializable]
    public partial class Documento_Serie_DE : EntityId
    {
        protected internal Nullable<int> _IdDocumentoVenta;
        public virtual Nullable<int> IdDocumentoVenta
    	{
    	    get { return _IdDocumentoVenta; }
    	    set { if (value != _IdDocumentoVenta) { _IdDocumentoVenta = value; OnPropertyChanged("IdDocumentoVenta"); } }
        }	
        protected internal string _Serie;
        public virtual string Serie
    	{
    	    get { return _Serie; }
    	    set { if (value != _Serie) { _Serie = value; OnPropertyChanged("Serie"); } }
        }	
        protected internal Nullable<int> _NumeroActual;
        public virtual Nullable<int> NumeroActual
    	{
    	    get { return _NumeroActual; }
    	    set { if (value != _NumeroActual) { _NumeroActual = value; OnPropertyChanged("NumeroActual"); } }
        }	
        protected internal Nullable<bool> _EsElectronico;
        public virtual Nullable<bool> EsElectronico
    	{
    	    get { return _EsElectronico; }
    	    set { if (value != _EsElectronico) { _EsElectronico = value; OnPropertyChanged("EsElectronico"); } }
        }	
    
    
    	protected internal Documentos_Venta_BE _DocumentosVenta;
        public virtual Documentos_Venta_BE DocumentosVenta
    	{
            get 
            {
    			if (_DocumentosVenta == null) _DocumentosVenta = new Documentos_Venta_BE();
    			
    			if (!_DocumentosVenta.Loaded && Id != null)
    			{	
    				_DocumentosVenta.Id = Id;
     
                    new Documentos_Venta_BL().Load(_DocumentosVenta);
    			}
    				
                return _DocumentosVenta;
            } 
    		set
    		{
                if (value != _DocumentosVenta) 
    			{
    				_DocumentosVenta = value;
    				
    				Id = _DocumentosVenta.Id;
                
    				OnPropertyChanged("DocumentosVenta");
    			}
    		}
    	}
    
    }
}

namespace Facel.Business.Entities
{
    [Serializable]
    public partial class Documento_Serie_BE : Documento_Serie_DE
    {
    }
}

//DataAccess
namespace Facel.Data.Accesses
{
    [Serializable]
    public partial class Documento_Serie_DA : AccessEntityId
    {
    	public  Documento_Serie_DA(string paramTableName, string paramConnectionStringName)
            : base(paramTableName, paramConnectionStringName)
    	{
    	}
    
        protected override Entity GetDE()
        {
            return new Documento_Serie_DE();
        }
    
        public override List<Field> GetFieldsData(Entity paramDE, bool paramIsSourceColumn = false, 
    		string paramTableAlias = "")
        {
            Documento_Serie_DE be = (Documento_Serie_DE)paramDE;
    
            List<Field> fields = new List<Field>();
    
            fields = AddField<Nullable<int>>(fields, "id_documento_venta", System.Data.DbType.Int32, be.IdDocumentoVenta, paramIsSourceColumn, paramTableAlias);
            fields = AddField<string>(fields, "serie", System.Data.DbType.String, be.Serie, paramIsSourceColumn, paramTableAlias);
            fields = AddField<Nullable<int>>(fields, "numero_actual", System.Data.DbType.Int32, be.NumeroActual, paramIsSourceColumn, paramTableAlias);
            fields = AddField<Nullable<bool>>(fields, "es_electronico", System.Data.DbType.Boolean, be.EsElectronico, paramIsSourceColumn, paramTableAlias);
            
    		return fields;
        }
    
        protected override Entity LoadDataReader(DbDataReader paramReader, Entity paramDE)
    	{
            Documento_Serie_DE be = (Documento_Serie_DE)paramDE;
    
    		be._IdDocumentoVenta = Conversion.To<Nullable<int>>(paramReader[TableColumn("id_documento_venta")]);
    		be._Serie = Conversion.To<string>(paramReader[TableColumn("serie")]);
    		be._NumeroActual = Conversion.To<Nullable<int>>(paramReader[TableColumn("numero_actual")]);
    		be._EsElectronico = Conversion.To<Nullable<bool>>(paramReader[TableColumn("es_electronico")]);
      
            return be;
    	}
        protected override Entity LoadDataRow(DataRow paramRow, Entity paramDE)
    	{
            Documento_Serie_DE be = (Documento_Serie_DE)paramDE;
    
    		be._IdDocumentoVenta = Conversion.To<Nullable<int>>(paramRow[TableColumn("id_documento_venta")]);
    		be._Serie = Conversion.To<string>(paramRow[TableColumn("serie")]);
    		be._NumeroActual = Conversion.To<Nullable<int>>(paramRow[TableColumn("numero_actual")]);
    		be._EsElectronico = Conversion.To<Nullable<bool>>(paramRow[TableColumn("es_electronico")]);
      
            return be;
    	}
        protected override Entity LoadDataParameters(DbParameterCollection paramParameters, Entity paramDE)
    	{
            Documento_Serie_DE be = (Documento_Serie_DE)paramDE;
    
    		be._IdDocumentoVenta = Conversion.To<Nullable<int>>(paramParameters[TableParameter("id_documento_venta")].Value);
    		be._Serie = Conversion.To<string>(paramParameters[TableParameter("serie")].Value);
    		be._NumeroActual = Conversion.To<Nullable<int>>(paramParameters[TableParameter("numero_actual")].Value);
    		be._EsElectronico = Conversion.To<Nullable<bool>>(paramParameters[TableParameter("es_electronico")].Value);
      
            return be;
    	}
    
        protected override Entity ClearData(Entity paramDE)
        {
            Documento_Serie_DE be = (Documento_Serie_DE)paramDE;
    
    		be._IdDocumentoVenta = null;
    		be._Serie = null;
    		be._NumeroActual = null;
    		be._EsElectronico = null;
      
    		be._DocumentosVenta = null;
    
            return be;
        }
    
    }
}

namespace Facel.Business.Accesses
{
    [Serializable]
    public partial class Documento_Serie_BA : Documento_Serie_DA
    {
    	public  Documento_Serie_BA(string paramTableName, string paramConnectionStringName)
            : base(paramTableName, paramConnectionStringName)
    	{
    	}
    	
    	protected override Entity GetDE()
        {
            return new Documento_Serie_BE();
        }
    }
}

//DataLogic
namespace Facel.Data.Logics
{
    [Serializable]
    public partial class Documento_Serie_DL : LogicEntity
    {
        protected override Access GetDA()
        {
            return new Documento_Serie_DA(TableName, ConnectionStringName);
        }
    	
    	protected override bool ValidateInsertModel(Entity paramDE, ref string paramField, ref string paramMessage)
        {
            Documento_Serie_BE be = (Documento_Serie_BE)paramDE;
    
      
    		return base.ValidateInsertModel(paramDE, ref paramField, ref paramMessage);
        }
    	protected override bool ValidateDeleteModel(Entity paramDE, ref string paramField, ref string paramMessage, bool paramValidateCascadeIntegrity = true)
        {
            Documento_Serie_BE be = (Documento_Serie_BE)paramDE;
    
            if (paramValidateCascadeIntegrity)
            {
            }
    			     
            return base.ValidateDeleteModel(paramDE, ref paramField, ref paramMessage, paramValidateCascadeIntegrity);
        }
    	
    	public override byte EraseModel(Entity paramDE, bool paramCheckKeyEmpty = true, bool paramIsSourceColumn = false)
        {
            byte ret = 1;
    
    		Documento_Serie_BE be = (Documento_Serie_BE)paramDE;
    
    		foreach (Documento_Serie_BE e in new Documento_Serie_FL().LoadConvert(new Documento_Serie_FL().Convert(be), 1))
    		{
     		}
    		
    		if (ret == 1)
                ret = base.EraseModel(paramDE, paramCheckKeyEmpty, paramIsSourceColumn);
            
    		return ret;
        }	
    }
}

namespace Facel.Business.Logics
{
    [Serializable]
    public partial class Documento_Serie_BL : Documento_Serie_DL
    {
        protected override Access GetDA()
        {
            return new Documento_Serie_BA(TableName, ConnectionStringName);
        }	
    }
    
}

//JoinEntities
namespace Facel.Join.Entities
{
    [Serializable]
    public partial class Documento_Serie_JE : EnumerateId
    {
        public virtual Filter<Nullable<int>> IdDocumentoVenta { get; set; }
        public virtual Filter<string> Serie { get; set; }
        public virtual Filter<Nullable<int>> NumeroActual { get; set; }
        public virtual Filter<Nullable<bool>> EsElectronico { get; set; }
    
    	protected Documentos_Venta_FE _DocumentosVenta;
        public Documentos_Venta_FE DocumentosVenta
    	{
            get 
            {
                _DocumentosVenta = _DocumentosVenta ?? new Documentos_Venta_FE();
                return _DocumentosVenta;
            } 
    		set
    		{
    			_DocumentosVenta = value;
    		}
    	}
    }
}

namespace Facel.Filter.Entities
{
    [Serializable]
    public partial class Documento_Serie_FE : Documento_Serie_JE
    {
    }
}


//JoinAccess
namespace Facel.Join.Accesses
{
    [Serializable]
    public partial class Documento_Serie_JA : AccessEnumerateId
    {	
    	public  Documento_Serie_JA(string paramTableName, string paramConnectionStringName)
            : base(paramTableName, paramConnectionStringName)
    	{
    	}
    	
    	protected override Entity GetDE()
        {
            return new Documento_Serie_DE();
        }
    	protected override Access GetDA()
        {
            return new Documento_Serie_DA(TableName, ConnectionStringName);
        }
    	
    	public override List<Field> GetFieldsData(Enumerate paramDE, bool paramIsSourceColumn = false, 
    		string paramTableAlias = "")
        {
            Documento_Serie_JE be = (Documento_Serie_JE)paramDE;
    
            List<Field> fields = new List<Field>();
    
            fields = AddField<Nullable<int>>(fields, "id_documento_venta", System.Data.DbType.Int32, be.IdDocumentoVenta, paramIsSourceColumn, paramTableAlias);
            fields = AddField<string>(fields, "serie", System.Data.DbType.String, be.Serie, paramIsSourceColumn, paramTableAlias);
            fields = AddField<Nullable<int>>(fields, "numero_actual", System.Data.DbType.Int32, be.NumeroActual, paramIsSourceColumn, paramTableAlias);
            fields = AddField<Nullable<bool>>(fields, "es_electronico", System.Data.DbType.Boolean, be.EsElectronico, paramIsSourceColumn, paramTableAlias);
            
    		return fields;
        }
    	
    	protected override List<Field> GetFieldsJoin(List<Field> paramFields, Enumerate paramDE, int paramDepth, int paramMaxDepth = 0, bool paramIsSourceColumn = false, 
    		string paramTableAlias = "")
        {
            Documento_Serie_FE be = (Documento_Serie_FE)paramDE;
    		
    		foreach (Field f in new Documentos_Venta_FL().GetFieldsJoin(be.DocumentosVenta, paramDepth, paramMaxDepth, paramIsSourceColumn, paramTableAlias + "__documentos_venta"))
        		paramFields.Add(f);
            
    		return paramFields;
    	}
    	protected override string GetTablesJoin(string paramTables, Enumerate paramDE, int paramDepth, int paramMaxDepth = 0, bool paramIsSourceColumn = false, 
    		string paramTableAlias = "",
    		Dictionary<string, string> paramFieldsJoin = null)
        {
    		Documento_Serie_FE be = (Documento_Serie_FE)paramDE;	
    	
    		paramTables += new Documentos_Venta_FL().GetTablesJoin(be.DocumentosVenta, paramDepth, paramMaxDepth, paramIsSourceColumn, paramTableAlias, paramTableAlias + "__documentos_venta", new Dictionary<string, string>() { { "id", "id" } });
    
    		return paramTables;
    	}	
    		
    }
}

namespace Facel.Filter.Accesses
{
    [Serializable]
    public partial class Documento_Serie_FA : Documento_Serie_JA
    {	
    	public  Documento_Serie_FA(string paramTableName, string paramConnectionStringName)
            : base(paramTableName, paramConnectionStringName)
    	{
    	}
    	
    	protected override Entity GetDE()
        {
            return new Documento_Serie_BE();
        }
    	protected override Access GetDA()
        {
            return new Documento_Serie_BA(TableName, ConnectionStringName);
        }
    }
}


//JoinLogic
namespace Facel.Join.Logics
{
    [Serializable]
    public partial class Documento_Serie_JL : LogicEnumerate
    {
    	protected override Access GetDA()
        {
            return new Documento_Serie_JA(TableName, ConnectionStringName);
        }
    	
    	public ObservableCollection<Documento_Serie_BE> LoadConvert(Enumerate paramDE, int paramMaxDepth = 0, TypeLoad paramTypeLoad = TypeLoad.DataReader, bool paramIsSourceColumn = false,
                int paramTop = 0,
    			int paramRowFrom = 0, int paramRowTo = 0)
        {
        	return new ObservableCollection<Documento_Serie_BE>(Load(paramDE, paramMaxDepth, paramTypeLoad, paramIsSourceColumn,
                    paramTop,
    				paramRowFrom, paramRowTo).ConvertAll(x => x as Documento_Serie_BE));
        }
    	public Documento_Serie_FE Convert(Documento_Serie_BE paramDE)
        {
            Documento_Serie_FE be = new Documento_Serie_FE();
    
    		be.IdDocumentoVenta = new Filter<Nullable<int>>(paramDE.IdDocumentoVenta);
    		be.Serie = new Filter<string>(paramDE.Serie);
    		be.NumeroActual = new Filter<Nullable<int>>(paramDE.NumeroActual);
    		be.EsElectronico = new Filter<Nullable<bool>>(paramDE.EsElectronico);
    		be.Id = new Filter<Nullable<int>>(paramDE.Id);
      
            return be;
        }	
    }
}

namespace Facel.Filter.Logics
{
    [Serializable]
    public partial class Documento_Serie_FL : Documento_Serie_JL
    {
    	protected override Access GetDA()
        {
            return new Documento_Serie_FA(TableName, ConnectionStringName);
        }
    }
}


//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Collections.ObjectModel;
using Library.Common.Data;
using Library.Framework;
using Library.Framework.Layers;
using Library.Framework.Data;

using Facel.Data.Entities;
using Facel.Data.Accesses;
using Facel.Data.Logics;
using Facel.Business.Entities;
using Facel.Business.Accesses;
using Facel.Business.Logics;
using Facel.Join.Entities;
using Facel.Join.Accesses;
using Facel.Join.Logics;
using Facel.Filter.Entities;
using Facel.Filter.Accesses;
using Facel.Filter.Logics;
using Facel.Main;


//DataEntity
namespace Facel.Data.Entities
{
    [Serializable]
    public partial class Unidad_Medida_DE : EntityId
    {
        protected internal string _Nombre;
        public virtual string Nombre
    	{
    	    get { return _Nombre; }
    	    set { if (value != _Nombre) { _Nombre = value; OnPropertyChanged("Nombre"); } }
        }	
        protected internal string _Abreviado;
        public virtual string Abreviado
    	{
    	    get { return _Abreviado; }
    	    set { if (value != _Abreviado) { _Abreviado = value; OnPropertyChanged("Abreviado"); } }
        }	
        protected internal string _CodigoTributario;
        public virtual string CodigoTributario
    	{
    	    get { return _CodigoTributario; }
    	    set { if (value != _CodigoTributario) { _CodigoTributario = value; OnPropertyChanged("CodigoTributario"); } }
        }	
        protected internal Nullable<bool> _Activo;
        public virtual Nullable<bool> Activo
    	{
    	    get { return _Activo; }
    	    set { if (value != _Activo) { _Activo = value; OnPropertyChanged("Activo"); } }
        }	
    
    
    
    }
}

namespace Facel.Business.Entities
{
    [Serializable]
    public partial class Unidad_Medida_BE : Unidad_Medida_DE
    {
    }
}

//DataAccess
namespace Facel.Data.Accesses
{
    [Serializable]
    public partial class Unidad_Medida_DA : AccessEntityId
    {
    	public  Unidad_Medida_DA(string paramTableName, string paramConnectionStringName)
            : base(paramTableName, paramConnectionStringName)
    	{
    	}
    
        protected override Entity GetDE()
        {
            return new Unidad_Medida_DE();
        }
    
        public override List<Field> GetFieldsData(Entity paramDE, bool paramIsSourceColumn = false, 
    		string paramTableAlias = "")
        {
            Unidad_Medida_DE be = (Unidad_Medida_DE)paramDE;
    
            List<Field> fields = new List<Field>();
    
            fields = AddField<string>(fields, "nombre", System.Data.DbType.String, be.Nombre, paramIsSourceColumn, paramTableAlias);
            fields = AddField<string>(fields, "abreviado", System.Data.DbType.String, be.Abreviado, paramIsSourceColumn, paramTableAlias);
            fields = AddField<string>(fields, "codigo_tributario", System.Data.DbType.String, be.CodigoTributario, paramIsSourceColumn, paramTableAlias);
            fields = AddField<Nullable<bool>>(fields, "activo", System.Data.DbType.Boolean, be.Activo, paramIsSourceColumn, paramTableAlias);
            
    		return fields;
        }
    
        protected override Entity LoadDataReader(DbDataReader paramReader, Entity paramDE)
    	{
            Unidad_Medida_DE be = (Unidad_Medida_DE)paramDE;
    
    		be._Nombre = Conversion.To<string>(paramReader[TableColumn("nombre")]);
    		be._Abreviado = Conversion.To<string>(paramReader[TableColumn("abreviado")]);
    		be._CodigoTributario = Conversion.To<string>(paramReader[TableColumn("codigo_tributario")]);
    		be._Activo = Conversion.To<Nullable<bool>>(paramReader[TableColumn("activo")]);
      
            return be;
    	}
        protected override Entity LoadDataRow(DataRow paramRow, Entity paramDE)
    	{
            Unidad_Medida_DE be = (Unidad_Medida_DE)paramDE;
    
    		be._Nombre = Conversion.To<string>(paramRow[TableColumn("nombre")]);
    		be._Abreviado = Conversion.To<string>(paramRow[TableColumn("abreviado")]);
    		be._CodigoTributario = Conversion.To<string>(paramRow[TableColumn("codigo_tributario")]);
    		be._Activo = Conversion.To<Nullable<bool>>(paramRow[TableColumn("activo")]);
      
            return be;
    	}
        protected override Entity LoadDataParameters(DbParameterCollection paramParameters, Entity paramDE)
    	{
            Unidad_Medida_DE be = (Unidad_Medida_DE)paramDE;
    
    		be._Nombre = Conversion.To<string>(paramParameters[TableParameter("nombre")].Value);
    		be._Abreviado = Conversion.To<string>(paramParameters[TableParameter("abreviado")].Value);
    		be._CodigoTributario = Conversion.To<string>(paramParameters[TableParameter("codigo_tributario")].Value);
    		be._Activo = Conversion.To<Nullable<bool>>(paramParameters[TableParameter("activo")].Value);
      
            return be;
    	}
    
        protected override Entity ClearData(Entity paramDE)
        {
            Unidad_Medida_DE be = (Unidad_Medida_DE)paramDE;
    
    		be._Nombre = null;
    		be._Abreviado = null;
    		be._CodigoTributario = null;
    		be._Activo = null;
      
    
            return be;
        }
    
    }
}

namespace Facel.Business.Accesses
{
    [Serializable]
    public partial class Unidad_Medida_BA : Unidad_Medida_DA
    {
    	public  Unidad_Medida_BA(string paramTableName, string paramConnectionStringName)
            : base(paramTableName, paramConnectionStringName)
    	{
    	}
    	
    	protected override Entity GetDE()
        {
            return new Unidad_Medida_BE();
        }
    }
}

//DataLogic
namespace Facel.Data.Logics
{
    [Serializable]
    public partial class Unidad_Medida_DL : LogicEntity
    {
        protected override Access GetDA()
        {
            return new Unidad_Medida_DA(TableName, ConnectionStringName);
        }
    	
    	protected override bool ValidateInsertModel(Entity paramDE, ref string paramField, ref string paramMessage)
        {
            Unidad_Medida_BE be = (Unidad_Medida_BE)paramDE;
    
      
    		return base.ValidateInsertModel(paramDE, ref paramField, ref paramMessage);
        }
    	protected override bool ValidateDeleteModel(Entity paramDE, ref string paramField, ref string paramMessage, bool paramValidateCascadeIntegrity = true)
        {
            Unidad_Medida_BE be = (Unidad_Medida_BE)paramDE;
    
            if (paramValidateCascadeIntegrity)
            {
            }
    			     
            return base.ValidateDeleteModel(paramDE, ref paramField, ref paramMessage, paramValidateCascadeIntegrity);
        }
    	
    	public override byte EraseModel(Entity paramDE, bool paramCheckKeyEmpty = true, bool paramIsSourceColumn = false)
        {
            byte ret = 1;
    
    		Unidad_Medida_BE be = (Unidad_Medida_BE)paramDE;
    
    		foreach (Unidad_Medida_BE e in new Unidad_Medida_FL().LoadConvert(new Unidad_Medida_FL().Convert(be), 1))
    		{
     		}
    		
    		if (ret == 1)
                ret = base.EraseModel(paramDE, paramCheckKeyEmpty, paramIsSourceColumn);
            
    		return ret;
        }	
    }
}

namespace Facel.Business.Logics
{
    [Serializable]
    public partial class Unidad_Medida_BL : Unidad_Medida_DL
    {
        protected override Access GetDA()
        {
            return new Unidad_Medida_BA(TableName, ConnectionStringName);
        }	
    }
    
}

//JoinEntities
namespace Facel.Join.Entities
{
    [Serializable]
    public partial class Unidad_Medida_JE : EnumerateId
    {
        public virtual Filter<string> Nombre { get; set; }
        public virtual Filter<string> Abreviado { get; set; }
        public virtual Filter<string> CodigoTributario { get; set; }
        public virtual Filter<Nullable<bool>> Activo { get; set; }
    
    }
}

namespace Facel.Filter.Entities
{
    [Serializable]
    public partial class Unidad_Medida_FE : Unidad_Medida_JE
    {
    }
}


//JoinAccess
namespace Facel.Join.Accesses
{
    [Serializable]
    public partial class Unidad_Medida_JA : AccessEnumerateId
    {	
    	public  Unidad_Medida_JA(string paramTableName, string paramConnectionStringName)
            : base(paramTableName, paramConnectionStringName)
    	{
    	}
    	
    	protected override Entity GetDE()
        {
            return new Unidad_Medida_DE();
        }
    	protected override Access GetDA()
        {
            return new Unidad_Medida_DA(TableName, ConnectionStringName);
        }
    	
    	public override List<Field> GetFieldsData(Enumerate paramDE, bool paramIsSourceColumn = false, 
    		string paramTableAlias = "")
        {
            Unidad_Medida_JE be = (Unidad_Medida_JE)paramDE;
    
            List<Field> fields = new List<Field>();
    
            fields = AddField<string>(fields, "nombre", System.Data.DbType.String, be.Nombre, paramIsSourceColumn, paramTableAlias);
            fields = AddField<string>(fields, "abreviado", System.Data.DbType.String, be.Abreviado, paramIsSourceColumn, paramTableAlias);
            fields = AddField<string>(fields, "codigo_tributario", System.Data.DbType.String, be.CodigoTributario, paramIsSourceColumn, paramTableAlias);
            fields = AddField<Nullable<bool>>(fields, "activo", System.Data.DbType.Boolean, be.Activo, paramIsSourceColumn, paramTableAlias);
            
    		return fields;
        }
    	
    	protected override List<Field> GetFieldsJoin(List<Field> paramFields, Enumerate paramDE, int paramDepth, int paramMaxDepth = 0, bool paramIsSourceColumn = false, 
    		string paramTableAlias = "")
        {
            Unidad_Medida_FE be = (Unidad_Medida_FE)paramDE;
    		
            
    		return paramFields;
    	}
    	protected override string GetTablesJoin(string paramTables, Enumerate paramDE, int paramDepth, int paramMaxDepth = 0, bool paramIsSourceColumn = false, 
    		string paramTableAlias = "",
    		Dictionary<string, string> paramFieldsJoin = null)
        {
    		Unidad_Medida_FE be = (Unidad_Medida_FE)paramDE;	
    
    
    		return paramTables;
    	}	
    		
    }
}

namespace Facel.Filter.Accesses
{
    [Serializable]
    public partial class Unidad_Medida_FA : Unidad_Medida_JA
    {	
    	public  Unidad_Medida_FA(string paramTableName, string paramConnectionStringName)
            : base(paramTableName, paramConnectionStringName)
    	{
    	}
    	
    	protected override Entity GetDE()
        {
            return new Unidad_Medida_BE();
        }
    	protected override Access GetDA()
        {
            return new Unidad_Medida_BA(TableName, ConnectionStringName);
        }
    }
}


//JoinLogic
namespace Facel.Join.Logics
{
    [Serializable]
    public partial class Unidad_Medida_JL : LogicEnumerate
    {
    	protected override Access GetDA()
        {
            return new Unidad_Medida_JA(TableName, ConnectionStringName);
        }
    	
    	public ObservableCollection<Unidad_Medida_BE> LoadConvert(Enumerate paramDE, int paramMaxDepth = 0, TypeLoad paramTypeLoad = TypeLoad.DataReader, bool paramIsSourceColumn = false,
                int paramTop = 0,
    			int paramRowFrom = 0, int paramRowTo = 0)
        {
        	return new ObservableCollection<Unidad_Medida_BE>(Load(paramDE, paramMaxDepth, paramTypeLoad, paramIsSourceColumn,
                    paramTop,
    				paramRowFrom, paramRowTo).ConvertAll(x => x as Unidad_Medida_BE));
        }
    	public Unidad_Medida_FE Convert(Unidad_Medida_BE paramDE)
        {
            Unidad_Medida_FE be = new Unidad_Medida_FE();
    
    		be.Id = new Filter<Nullable<int>>(paramDE.Id);
    		be.Nombre = new Filter<string>(paramDE.Nombre);
    		be.Abreviado = new Filter<string>(paramDE.Abreviado);
    		be.CodigoTributario = new Filter<string>(paramDE.CodigoTributario);
    		be.Activo = new Filter<Nullable<bool>>(paramDE.Activo);
      
            return be;
        }	
    }
}

namespace Facel.Filter.Logics
{
    [Serializable]
    public partial class Unidad_Medida_FL : Unidad_Medida_JL
    {
    	protected override Access GetDA()
        {
            return new Unidad_Medida_FA(TableName, ConnectionStringName);
        }
    }
}

